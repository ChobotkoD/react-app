{"version":3,"sources":["components/header/HeaderElements.js","components/header/index.js","components/mainPage/MainPageElements.js","images/no-image.svg","components/mainPage/index.js","components/favouritesPage/FavouritesPageElements.js","components/favouritesPage/index.js","App.js","index.js"],"names":["HeaderContainer","styled","div","HeaderLinks","Header","to","MainWrapper","MainContainer","MainButtons","MainPage","useState","recipe","setRecipe","useEffect","fetchRandomRecipe","a","fetch","response","json","randomRecipe","meals","strMealThumb","src","alt","thumbnotfound","strMeal","strInstructions","id","className","onClick","itemsArray","localStorage","getItem","JSON","parse","setItem","stringify","push","FavouriteWrapper","FavouriteRecipe","NewRecipeAddButton","ModalFormBackground","ModalFormContainer","ModalFormClose","MdClose","FavouritesPage","data","newRecipe","setNewRecipe","callBtn","setCallBtn","onSubmit","e","prev","required","value","undefined","render","handleSubmit","name","validate","input","meta","type","placeholder","autoComplete","error","touched","Object","keys","length","map","item","index","App","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.63672cb4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n  background-color: #eee;\r\n  height: 50px;\r\n  display: grid;\r\n  grid-template-columns: 1fr auto 1fr;\r\n`;\r\n\r\nexport const HeaderLinks = styled.div`\r\n  grid-column-start: 2;\r\n  align-self: center;\r\n  a {\r\n    cursor: pointer;\r\n    padding: 0 10px;\r\n    text-decoration: none;\r\n    color: black;\r\n    padding-right: 15px;\r\n    &:hover {\r\n      border-bottom: 2px solid #474747e3;\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    a {\r\n      padding: 0 40px;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { HeaderContainer, HeaderLinks } from \"./HeaderElements\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer>\r\n        <HeaderLinks>\r\n          <NavLink to=\"/react-app\">\r\n            <span>Main</span>\r\n          </NavLink>\r\n          <NavLink to=\"/favourites\">\r\n            <span>Favourites</span>\r\n          </NavLink>\r\n        </HeaderLinks>\r\n      </HeaderContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 35% 30% 35%;\r\n  @media (max-width: 992px) {\r\n    grid-template-columns: 25% 50% 25%;\r\n  }\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 20% 60% 20%;\r\n  }\r\n  @media (max-width: 480px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const MainContainer = styled.div`\r\n  img {\r\n    object-fit: cover;\r\n    width: 100%;\r\n    max-height: 100%;\r\n  }\r\n  grid-column-start: 2;\r\n  @media (max-width: 480px) {\r\n    p {\r\n      font-size: 0.8rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MainButtons = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n  .btnMain {\r\n    text-align: middle;\r\n    padding: 5px 0;\r\n    margin-bottom: 30px;\r\n    cursor: pointer;\r\n  }\r\n  #next-button {\r\n    background-color: #a6a6a6ed;\r\n    &:hover {\r\n      background-color: #808080ed;\r\n    }\r\n  }\r\n  #save-button {\r\n    background-color: yellowgreen;\r\n    &:hover {\r\n      background-color: #84ab36;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/no-image.5c7731b2.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { MainWrapper, MainContainer, MainButtons } from \"./MainPageElements\";\r\nimport thumbnotfound from \"../../images/no-image.svg\";\r\n\r\nconst MainPage = () => {\r\n  const [recipe, setRecipe] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetchRandomRecipe();\r\n  }, []);\r\n\r\n  //fetch random recipe from API by click\r\n  const fetchRandomRecipe = async () => {\r\n    const response = await fetch(\r\n      \"https://www.themealdb.com/api/json/v1/1/random.php\"\r\n    );\r\n    const randomRecipe = await response.json();\r\n    setRecipe(randomRecipe.meals[0]);\r\n  };\r\n\r\n  //save recipe to localstore and display on favourite page\r\n  const saveToLocalStorage = () => {\r\n    let itemsArray = localStorage.getItem(\"items\")\r\n      ? JSON.parse(localStorage.getItem(\"items\"))\r\n      : [];\r\n    localStorage.setItem(\"items\", JSON.stringify(itemsArray));\r\n    itemsArray.push(recipe);\r\n    localStorage.setItem(\"items\", JSON.stringify(itemsArray));\r\n  };\r\n\r\n  return (\r\n    <MainWrapper>\r\n      <MainContainer>\r\n        {recipe.strMealThumb ? (\r\n          <img src={recipe.strMealThumb} alt=\"mealImage\" />\r\n        ) : (\r\n          <img src={thumbnotfound} alt=\"recipe-thumb\" />\r\n        )}\r\n        {recipe.strMeal}\r\n        <p>{recipe.strInstructions}</p>\r\n        <MainButtons>\r\n          <div id=\"next-button\" className=\"btnMain\" onClick={fetchRandomRecipe}>\r\n            <p>NEXT RECIPE</p>\r\n          </div>\r\n          <div\r\n            id=\"save-button\"\r\n            className=\"btnMain\"\r\n            onClick={saveToLocalStorage}\r\n          >\r\n            <p>SAVE</p>\r\n          </div>\r\n        </MainButtons>\r\n      </MainContainer>\r\n    </MainWrapper>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import styled from \"styled-components\";\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\nexport const FavouriteWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  #empty-list {\r\n    grid-column-start: 2;\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    grid-gap: 10px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  @media (max-width: 480px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const FavouriteRecipe = styled.div`\r\n  padding: 40px;\r\n  img {\r\n    object-fit: cover;\r\n    width: 80%;\r\n  }\r\n  @media (max-width: 992px) {\r\n    padding: 15px;\r\n    p {\r\n      font-size: 0.75rem;\r\n    }\r\n    img {\r\n      width: 90%;\r\n    }\r\n  }\r\n  @media (max-width: 768px) {\r\n    padding: 5px;\r\n    h2 {\r\n      font-size: 1.2rem;\r\n    }\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NewRecipeAddButton = styled.div`\r\n  background-color: #e29c9c;\r\n  max-width: 120px;\r\n  margin: 10px auto 0;\r\n  padding: 2px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  -webkit-box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\r\n  -moz-box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\r\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\r\n  &:hover {\r\n    background-color: #d17b7b;\r\n  }\r\n  &:active {\r\n    transform: translate(3px, 3px);\r\n  }\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n  max-width: 300px;\r\n  padding: 20px;\r\n  margin: 20px auto 0;\r\n  background-color: green;\r\n`;\r\n\r\nexport const ModalFormBackground = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const ModalFormContainer = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  width: 400px;\r\n  height: 500px;\r\n  background: #fff;\r\n  margin: auto;\r\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\r\n  border-radius: 3px;\r\n  z-index: 2;\r\n\r\n  input {\r\n    margin-top: 50px;\r\n    border-top: none;\r\n    border-right: none;\r\n    border-bottom: 1px solid black;\r\n    border-left: none;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  textarea {\r\n    margin: 30px 0 0 0;\r\n    width: 90%;\r\n    height: 250px;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    border: 1px solid #ccc;\r\n    box-shadow: 1px 1px 1px #999;\r\n    outline: none;\r\n    resize: none;\r\n  }\r\n  #span-textarea {\r\n    width: 66px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: calc(50% - 33px);\r\n  }\r\n\r\n  button {\r\n    margin-top: 40px;\r\n    cursor: pointer;\r\n    color: white;\r\n    background: #000;\r\n    padding: 3% 8%;\r\n  }\r\n\r\n  /* @media (max-width: 768px) {\r\n    width: 100%;\r\n    grid-template-columns: 1fr;\r\n  } */\r\n`;\r\n\r\nexport const ModalFormClose = styled(MdClose)`\r\n  font-size: 2rem;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport {\r\n  FavouriteRecipe,\r\n  FavouriteWrapper,\r\n  NewRecipeAddButton,\r\n  ModalFormBackground,\r\n  ModalFormContainer,\r\n  ModalFormClose,\r\n} from \"./FavouritesPageElements\";\r\n\r\nimport thumbnotfound from \"../../images/no-image.svg\";\r\n\r\nconst FavouritesPage = () => {\r\n  const data = localStorage.getItem(\"items\")\r\n    ? JSON.parse(localStorage.getItem(\"items\"))\r\n    : [];\r\n  const [newRecipe, setNewRecipe] = useState(data);\r\n  const [callBtn, setCallBtn] = useState(false);\r\n\r\n  //save form input to localhost\r\n  const onSubmit = (e) => {\r\n    data.push(e);\r\n    localStorage.setItem(\"items\", JSON.stringify(data));\r\n    setNewRecipe(JSON.parse(localStorage.getItem(\"items\")));\r\n    setCallBtn((prev) => !prev);\r\n  };\r\n\r\n  const required = (value) => (value ? undefined : \"Required\");\r\n  //final-form\r\n  const customRecipeForm = () => (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Field name=\"strMeal\" validate={required}>\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <input\r\n                  {...input}\r\n                  type=\"text\"\r\n                  placeholder=\"Name your dish\"\r\n                  autoComplete=\"off\"\r\n                />\r\n                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n\r\n          <div>\r\n            <Field\r\n              name=\"strInstructions\"\r\n              validate={required}\r\n              render={({ input, meta }) => (\r\n                <>\r\n                  <textarea {...input} />\r\n                  {meta.error && meta.touched && (\r\n                    <span id=\"span-textarea\">{meta.error}</span>\r\n                  )}\r\n                </>\r\n              )}\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <NewRecipeAddButton onClick={() => setCallBtn((prev) => !prev)}>\r\n        <p>ADD NEW</p>\r\n      </NewRecipeAddButton>\r\n      {!callBtn ? (\r\n        \"\"\r\n      ) : (\r\n        <ModalFormBackground>\r\n          <ModalFormContainer>\r\n            <ModalFormClose onClick={() => setCallBtn((prev) => !prev)} />\r\n            {customRecipeForm()}\r\n          </ModalFormContainer>\r\n        </ModalFormBackground>\r\n      )}\r\n\r\n      <FavouriteWrapper>\r\n        {Object.keys(newRecipe).length > 0 ? (\r\n          newRecipe.map((item, index) => (\r\n            <FavouriteRecipe key={index}>\r\n              {item.strMealThumb ? (\r\n                <img src={item.strMealThumb} alt=\"mealImage\" />\r\n              ) : (\r\n                <img src={thumbnotfound} alt=\"recipe-thumb\" />\r\n              )}\r\n\r\n              <h2>{item.strMeal}</h2>\r\n              <p>{item.strInstructions}</p>\r\n            </FavouriteRecipe>\r\n          ))\r\n        ) : (\r\n          <div id=\"empty-list\">Add your first recipe or create new one!</div>\r\n        )}\r\n      </FavouriteWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FavouritesPage;\r\n","import \"./App.css\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/header\";\nimport MainPage from \"./components/mainPage\";\nimport FavouritesPage from \"./components/favouritesPage\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n\n      <Switch>\n        <Route path=\"/react-app\" exact render={() => <MainPage />} />\n        <Route path=\"/favourites\" render={() => <FavouritesPage />} />\n        <Route render={() => <h1>not found</h1>} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}